{"version":3,"sources":["components/Header.js","components/RecipeItem.js","components/Recipes.js","components/FilterComp.js","App.js","index.js"],"names":["Header","props","search","onInputChange","onSearchClick","className","type","placeholder","value","onChange","onClick","RecipeItem","name","image","calories","totalWeight","cautions","dietLabels","healthLabels","url","healthArray","src","alt","style","margin","map","label","color","includes","toFixed","marginBottom","join","href","Recipes","recipes","recipe","key","Math","random","Filter","addFilter","useState","input","setInput","e","target","App","setSerach","setRecipes","isLoading","setLoading","setHealthArray","theme","setTheme","getRecipes","a","Axios","get","res","console","log","data","hits","useEffect","filter","item","animation","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f4e847c4.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\nconst Header = props => {\r\n\r\n  const {search, onInputChange, onSearchClick} = props;\r\n  return(\r\n    <div className=\"py-5\">\r\n      <h1 className=\"display-1 header-text\">Healthy Food</h1>\r\n      <div className=\"input-group w-50 mx-auto\">\r\n        <input \r\n          type=\"text\" \r\n          className=\"form-control\" \r\n          placeholder=\"Search your recipe...\"\r\n          value={search}\r\n          onChange={onInputChange}\r\n          />\r\n        <div className=\"input-group-append\">\r\n          <button className=\"btn btn-dark\" onClick={onSearchClick}>Search</button>\r\n        </div>\r\n      </div>  \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;","import React from \"react\";\r\nimport style from '../App.css';\r\n\r\n\r\n\r\n\r\nconst RecipeItem = (props) => {\r\n    const {name, image, calories, totalWeight, cautions, dietLabels, healthLabels, url, healthArray} = props;\r\n  return(\r\n\r\n    <div className=\"card-deck col-lg-4 col-md-6 mt-5\">\r\n      <div className=\"card h-100 py-2 text-start\">\r\n        <img src={image} className=\"card-img-top w-100 mx-auto\" alt=\"...\" />\r\n        \r\n        <div className=\"card-body\">\r\n          {/* name */}\r\n          <h5 className=\"card-title\">{name}</h5>\r\n\r\n          {/* cautions */}\r\n          <p className=\"card-text font-weight-bold text_red\" style={{ margin: \"0px 0px 0px 0px\" }}>Cautions:</p>         \r\n            <div className=\"itemPisition\">\r\n             {cautions.map((label) => ( \r\n                 <p \r\n                  style={{ margin: \"0px 0px 0px 5px\", color: healthArray.includes(label) ? \"red\" : \"black\" }} \r\n                  className=\"card-text\" \r\n                 > \r\n                  {label} \r\n                 </p> \r\n               ))} \r\n            </div>    \r\n          {/* calories */}\r\n          <p className=\"card-text font-weight-bold\" style={{ margin: \"15px 0px 0px 0px\" }}>{calories.toFixed()} Kkal</p>\r\n          {/* TotalWeight */}\r\n          <p className=\"card-text font-weight-bold\" style={{ margin: \"15px 0px 0px 0px\" }}>TotalWeight: </p>\r\n          <p className=\"card-text \" style={{ margin: \"0px 0px 0px 5px\" }}>{totalWeight.toFixed()} gm</p>\r\n          {/* DietLabels */}\r\n          <p className=\"card-text font-weight-bold \" style={{ margin: \"15px 0px 0px 0px\" }}>DietLabels: </p>\r\n          <div className=\"itemPisition\">   \r\n          {dietLabels.map((label) => ( \r\n              <p \r\n                style={{ margin: \"0px 0px 0px 5px\", marginBottom: 0, color: healthArray.includes(label) ? \"green\" : \"black\" }} \r\n                className=\"card-text \" \r\n              > \r\n                {label} \r\n              </p> \r\n            ))}\r\n            </div>      \r\n          {/*healthLabels  */}\r\n           <p className=\"card-text font-weight-bold \" style={{ margin: \"15px 0px 0px 0px\" }}>HealthLabels:</p> \r\n\r\n           <div className=\"itemPisition\">\r\n            {healthLabels.map((label) => ( \r\n              <p \r\n               style={{ margin: \"0px 0px 0px 5px\",  color: healthArray.join(\" row\").includes(label) ? \"lightgreen\" : \"black\" }} \r\n               className=\"card-text\" \r\n              > \r\n                {label} \r\n              </p> \r\n            ))}          \r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"card-footer bg-transparent d-flex btn-group \">\r\n        <a href={url} className=\"btn btn-outline-success btn-md \">Get Recipe</a>\r\n        <a href=\"https://www.facebook.com/max.brenzey/\" className=\"btn btn-outline-success btn-md \">Page Author</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\nexport default RecipeItem;","import React from \"react\";\r\nimport RecipeItem from \"./RecipeItem\";\r\n\r\nconst Recipes = props => {\r\n  const { recipes, healthArray } = props;\r\n  return (\r\n    <div className=\"row row-cols-1 row-cols-md-3\"  >\r\n      {\r\n      recipes.map(recipe => (\r\n        <RecipeItem\r\n          key={Math.random() * 100}\r\n          image={recipe.recipe.image}\r\n          name={recipe.recipe.label}\r\n          cautions={recipe.recipe.cautions}\r\n          calories={recipe.recipe.calories}\r\n          totalWeight={recipe.recipe.totalWeight}\r\n          dietLabels={recipe.recipe.dietLabels}\r\n          healthLabels={recipe.recipe.healthLabels}\r\n          url={recipe.recipe.url}\r\n          healthArray={healthArray}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default Recipes;","import React, {useState} from \"react\";\r\n\r\n\r\nconst Filter = props => {\r\n\r\n  const { addFilter} = props;\r\n  const [input, setInput] = useState(\"\");\r\n  return(\r\n    <div className=\"py-5\">\r\n      <div className=\"input-group w-25 mx-auto\" > \r\n\r\n        <input \r\n          type=\"text\" \r\n          className=\"form-control\" \r\n          placeholder=\"Write Filer\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          />\r\n        <div className=\"input-group-append\">\r\n          <button className=\"btn btn-dark\" onClick={() => addFilter(input)}>filter</button>\r\n        </div>\r\n      </div>  \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;","import React, { useState, useEffect } from \"react\";\n// import logo from './logo.svg';\nimport \"./App.css\";\nimport \"./components/them.css\";\nimport Header from \"./components/Header\";\nimport Recipes from \"./components/Recipes\";\nimport Axios from \"axios\";\nimport * as ReactBootStrap from \"react-bootstrap\";\nimport Filter from \"./components/FilterComp\";\n// import Theme from \"./components/ThemeComp\";\n\n\nfunction App() {\n  const [search, setSerach] = useState(\"\");\n  const [recipes, setRecipes] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n  const [healthArray, setHealthArray] = useState([]);\n  const [theme, setTheme] = useState(false);\n\n\n\n  const APP_ID = \"f02fd65d\";\n  const APP_KEY = \"ebcf666cd63ce1b44e5f56b6a5e2495f\";\n\n  const getRecipes = async () => {\n    setLoading(true);\n    const res = await Axios.get(\n      `https://api.edamam.com/search?q=${search}&app_id=${APP_ID}&app_key=${APP_KEY}`\n    );\n    console.log(res);\n    setRecipes(res.data.hits);\n    setLoading(false);\n  };\n\n  const addFilter = (filter) => {\n    setHealthArray([...healthArray, filter]);\n  }\n\n  useEffect(() => {\n    getRecipes();\n  }, []);\n\n  const onInputChange = (e) => {\n    setSerach(e.target.value);\n  };\n\n  const onSearchClick = () => {\n    getRecipes();\n  };\n  \n  return (\n\n    <div className={theme ? \"App darkMode\" : \"App\"}>\n      <Header\n        search={search}\n        onInputChange={onInputChange}\n        onSearchClick={onSearchClick}\n      />\n      <Filter\n        addFilter={addFilter}  \n      />\n\n      {/* theme */}\n      <div className=\"nav\">\n        <label className=\"switch\">\n        <input \n        type=\"checkbox\" \n        onChange={() => setTheme(!theme)}\n        />\n        <span className=\"slider round\"></span>\n        </label>\n      </div>\n\n\n      {/* filter position */}\n      <div className=\"filterItemPosition\">\n      {healthArray.map(item => {\n        return <div ><p className=\"HealthLabelsDiv\">{item}</p></div>       \n      })}\n      </div>\n\n      <div className=\"container\">\n        <Recipes recipes={recipes} healthArray={healthArray} />\n        \n        <div className=\"spin\">\n          {isLoading ? <ReactBootStrap.Spinner animation=\"border\" /> : <div />}\n        </div>\n      </div>\n    </div>\n    );\n  }\n  \n  export default App;\n  \n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}